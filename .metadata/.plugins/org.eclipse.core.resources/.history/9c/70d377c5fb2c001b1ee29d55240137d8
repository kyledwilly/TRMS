package com.revature.controller;

import java.util.Scanner;

import com.revature.beans.Role;
import com.revature.beans.User;
import com.revature.services.UserService;
import com.revature.services.UserServiceImpl;


public class BikeShopController {
	private static Scanner scan;
	private static UserService userServ = new UserServiceImpl();
	private static User user = new User();
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		scan = new Scanner(System.in);
		
		System.out.println("----Welcome to Kyle's Bike Shop----");

loginLoop: while(true) {

	System.out.println("Would you like to login or register?");
	String userInput = scan.nextLine();
	if(userInput.toLowerCase().equalsIgnoreCase("login")) {
		user = logInUser();
		break loginLoop;
	}
	else if(userInput.toLowerCase().equalsIgnoreCase("register")) {
		user = registerUser();
		if (user == null) {
			continue;
		}
		else
		break loginLoop;
	}
	else {
		continue;
	}
}
		
//if you're entering the mainloop, youre logged in
//mainloop first checks roles. each role has its own commands
  mainLoop: while(true) {
	  String userInput;
	  switch(user.getRole().getName()) {
	  case "customer":
		  	System.out.println("Commands that customers can use are: \n 1. View my bikes \n 2. View available bikes\n 3. View remaining payments for a bike 4. Make an offer for a bike\n");
			System.out.println("(type help for list of commands");
			System.out.println("#");
			userInput = scan.nextLine();
			
			switch(userInput.toLowerCase()) {
			case "help":
				System.out.println("Commands that customers can use are: \n 1. View my bikes \n 2. View available bikes\n 3. View remaining payments for a bike 4. Make an offer for a bike\n");
				break;
			case "1":
				//View my bikes 
				break;
			case "2":
				//View available bikes
				break;
			case "3":
				//View remaining payments for a bike
				break;
			case "4":
				//Make an offer for a bike
				break;
			case "quit":
				System.out.println("goodbye...");
				break mainLoop;
			case "exit":
				System.out.println("goodbye...");
				break mainLoop;		
			default:
				System.out.println("command not recognized");
			}
		  break;
	  case "employee":
			System.out.println("(type help for list of commands");
			System.out.println("#");
			userInput = scan.nextLine();
			
			switch(userInput.toLowerCase()) {
			case "help":
				System.out.println("Command that employees can use are: \n 1. \n 2.\n 3.\n");
				break;
			case "quit":
				System.out.println("goodbye...");
				break mainLoop;
			case "exit":
				System.out.println("goodbye...");
				break mainLoop;			
			}
	  	  break;
	  }
	  

		}
	}

	
	
	private static User registerUser() {
		while (true) {
			User user = new User();
			System.out.println("Username:");
			user.setName(scan.nextLine());
			System.out.println("Password:");
			user.setPassword(scan.nextLine());
			Role r = new Role(2);
			user.setRole(r);
			System.out.println(user.getName() + " : " + user.getPassword());
			
			if(userServ.getUserByName(user.getName()) == null) {
				Integer newUserId = userServ.addUser(user);
				user.setId(newUserId);
				return user;
			}
			else {
				System.out.println("User already exists.");
				return null;
			}
		}
	}
	private static User logInUser() {
		while (true) {
			System.out.println("Username: ");
			String username = scan.nextLine();
			System.out.println("Password: ");
			String password = scan.nextLine();
			
			User user = userServ.getUserByName(username);
			if (user == null) {
				System.out.print("User not found");
			} else if (user.getPassword().equals(password)) {
				System.out.println("Welcome back!");
				return user;
			} else {
				System.out.print("That password is incorrect. ");
			}
			System.out.println("Do you want to try again?");
			String input = scan.nextLine();
			if ("yes".equalsIgnoreCase(input)) {
				continue;
			}
			else 
				return null;
		}
	}
}
